.extern scanf
	.rdata
data_section_$$0: 
	.asciiz "%d"
	.text
	.globl __micro_read
	.ent __micro_read
__micro_read:
	.set noreorder
	.frame $s8, 48, $ra
	.cpload $t9
	.set reorder 
	addi $sp, $sp, -48
	.cprestore 32
	sw $ra, 28($sp)
	sw $s8, 36($sp)
	move $s8, $sp
__micro_read_$$branch_0:
	li $t0, 40
	add $t1, $t0, $s8
	la $t0, data_section_$$0

	sw $t0, 0($s8)
	sw $t1, 4($s8)
	lw $a0, 0($s8)
	lw $a1, 4($s8)
	jal scanf
	 
	lw $t1, 40($s8)
	move $v0, $t1
__micro_read_$$epilogue:
	move $sp, $s8
	lw $s8, 36($sp)
	lw $ra, 28($sp)
	addi $sp, $sp, 48
	jr $ra
	.end __micro_read
.extern scanf
	.rdata
data_section_$$1: 
	.asciiz "%d\n"
# gcc headers for __micro_write
	.text
	.globl __micro_write
	.ent __micro_write
__micro_write:
	.set noreorder
	.frame $s8, 40, $ra
	.cpload $t9
	.set reorder 
	addi $sp, $sp, -40
	.cprestore 32
	sw $ra, 28($sp)
	sw $s8, 36($sp)
	move $s8, $sp
__micro_write_$$branch_0:
	la $t0, data_section_$$1
	sw $t0, 0($s8)
	sw $a0, 4($s8)
	lw $a0, 0($s8)
	lw $a1, 4($s8)
	jal printf
__micro_write_$$epilogue:
	move $sp, $s8
	lw $s8, 36($sp)
	lw $ra, 28($sp)
	addi $sp, $sp, 40
	jr $ra
	.end __micro_write
	.text
	.globl main
	.ent main
main:
	.set noreorder
	.frame $s8, 1024, $ra
	.cpload $t9
	.set reorder 
	addi $sp, $sp, -1024
	.cprestore 24
	sw $ra, 20($sp)
	sw $s8, 28($sp)
	move $s8, $sp
main_$$branch_0:
	jal __micro_read
	sw $v0, 32($s8)
	li $t0, 1
	lw $t1, 32($s8)
	add $t2, $t0, $t1
	add $t1, $t2, $zero
	sw $t1, 32($s8)
	li $t0, 1
	lw $t1, 32($s8)
	add $t2, $t0, $t1
	add $t1, $t2, $zero
	sw $t1, 36($s8)
	lw $t0, 32($s8)
	move $a0, $t0
	jal __micro_write
	lw $t0, 36($s8)
	move $a0, $t0
	jal __micro_write
	lw $t0, 36($s8)
	lw $t1, 32($s8)
	add $t2, $t0, $t1
	add $t1, $t2, $zero
	move $a0, $t1
	jal __micro_write
main_$$epilogue:
	move $sp, $s8
	lw $s8, 28($sp)
	lw $ra, 20($sp)
	addi $sp, $sp, 1024
	jr $ra
	.end main
